/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef SCREENLPS25VIEWBASE_HPP
#define SCREENLPS25VIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/screenlps25_screen/ScreenLPS25Presenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/widgets/Button.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>

class ScreenLPS25ViewBase : public touchgfx::View<ScreenLPS25Presenter>
{
public:
    ScreenLPS25ViewBase();
    virtual ~ScreenLPS25ViewBase() {}
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box __background;
    touchgfx::Box box1;
    touchgfx::Button buttonLPS25;
    touchgfx::TextAreaWithOneWildcard textAreaTemp;
    touchgfx::TextAreaWithOneWildcard textAreaPres;

    /*
     * Wildcard Buffers
     */
    static const uint16_t TEXTAREATEMP_SIZE = 10;
    touchgfx::Unicode::UnicodeChar textAreaTempBuffer[TEXTAREATEMP_SIZE];
    static const uint16_t TEXTAREAPRES_SIZE = 10;
    touchgfx::Unicode::UnicodeChar textAreaPresBuffer[TEXTAREAPRES_SIZE];

private:

    /*
     * Callback Declarations
     */
    touchgfx::Callback<ScreenLPS25ViewBase, const touchgfx::AbstractButton&> buttonCallback;

    /*
     * Callback Handler Declarations
     */
    void buttonCallbackHandler(const touchgfx::AbstractButton& src);

};

#endif // SCREENLPS25VIEWBASE_HPP
