/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef CALIBRATIONPROGRESSBARVIEWBASE_HPP
#define CALIBRATIONPROGRESSBARVIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/calibrationprogressbar_screen/CalibrationProgressBarPresenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/widgets/BoxWithBorder.hpp>
#include <touchgfx/containers/progress_indicators/CircleProgress.hpp>
#include <touchgfx/widgets/canvas/PainterRGB565Bitmap.hpp>
#include <touchgfx/widgets/TextArea.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>

class CalibrationProgressBarViewBase : public touchgfx::View<CalibrationProgressBarPresenter>
{
public:
    CalibrationProgressBarViewBase();
    virtual ~CalibrationProgressBarViewBase() {}
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box __background;
    touchgfx::Box backgroundCalibration;
    touchgfx::BoxWithBorder boxWithBorderFrame;
    touchgfx::CircleProgress calibrationProgress;
    touchgfx::PainterRGB565Bitmap calibrationProgressPainter;
    touchgfx::TextArea textLabelName;
    touchgfx::TextArea textLabelDescription;
    touchgfx::TextAreaWithOneWildcard textAreaValue;

    /*
     * Wildcard Buffers
     */
    static const uint16_t TEXTAREAVALUE_SIZE = 10;
    touchgfx::Unicode::UnicodeChar textAreaValueBuffer[TEXTAREAVALUE_SIZE];

private:

    /*
     * Canvas Buffer Size
     */
    static const uint16_t CANVAS_BUFFER_SIZE = 12000;
    uint8_t canvasBuffer[CANVAS_BUFFER_SIZE];
};

#endif // CALIBRATIONPROGRESSBARVIEWBASE_HPP
