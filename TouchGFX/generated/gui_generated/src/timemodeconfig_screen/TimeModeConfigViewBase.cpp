/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/timemodeconfig_screen/TimeModeConfigViewBase.hpp>
#include <touchgfx/Color.hpp>
#include "BitmapDatabase.hpp"
#include <texts/TextKeysAndLanguages.hpp>

TimeModeConfigViewBase::TimeModeConfigViewBase() :
    buttonCallback(this, &TimeModeConfigViewBase::buttonCallbackHandler)
{

    __background.setPosition(0, 0, 800, 480);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));

    boxLeftBackG.setPosition(-1, 60, 75, 420);
    boxLeftBackG.setColor(touchgfx::Color::getColorFromRGB(56, 69, 120));

    boxRightBackG.setPosition(725, 60, 75, 420);
    boxRightBackG.setColor(touchgfx::Color::getColorFromRGB(56, 69, 120));

    boxConfigTime.setPosition(0, 0, 800, 60);
    boxConfigTime.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));

    buttonBackTime.setXY(740, 0);
    buttonBackTime.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_ICON_BUTTON_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_ICON_BUTTON_PRESSED_ID));
    buttonBackTime.setAction(buttonCallback);

    labelTimeConfig.setXY(15, 18);
    labelTimeConfig.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    labelTimeConfig.setLinespacing(0);
    labelTimeConfig.setTypedText(touchgfx::TypedText(T_SINGLEUSEID3));

    boxBacgroundTC.setPosition(0, 60, 800, 420);
    boxBacgroundTC.setColor(touchgfx::Color::getColorFromRGB(56, 69, 120));

    swipeContainerTime.setXY(0, 60);
    swipeContainerTime.setPageIndicatorBitmaps(touchgfx::Bitmap(BITMAP_BLUE_PAGEINDICATOR_DOT_INDICATOR_SMALL_NORMAL_ID), touchgfx::Bitmap(BITMAP_BLUE_PAGEINDICATOR_DOT_INDICATOR_SMALL_HIGHLIGHT_ID));
    swipeContainerTime.setPageIndicatorXY(0, 0);
    swipeContainerTime.setSwipeCutoff(50);
    swipeContainerTime.setEndSwipeElasticWidth(50);

    swipeContainerTimeINPUT.setWidth(800);
    swipeContainerTimeINPUT.setHeight(420);

    boxINPUT.setPosition(0, 0, 800, 420);
    boxINPUT.setColor(touchgfx::Color::getColorFromRGB(0, 119, 255));
    swipeContainerTimeINPUT.add(boxINPUT);

    imageArrowR.setXY(770, 180);
    imageArrowR.setBitmap(touchgfx::Bitmap(BITMAP_DARK_ICONS_NEXT_ARROW_32_ID));
    swipeContainerTimeINPUT.add(imageArrowR);

    labelINPUT.setXY(15, 16);
    labelINPUT.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    labelINPUT.setLinespacing(0);
    labelINPUT.setTypedText(touchgfx::TypedText(T_SINGLEUSEID4));
    swipeContainerTimeINPUT.add(labelINPUT);
    swipeContainerTime.add(swipeContainerTimeINPUT);

    swipeContainerTimeCLOCK.setWidth(800);
    swipeContainerTimeCLOCK.setHeight(420);

    boxCLOCK.setPosition(0, 0, 800, 420);
    boxCLOCK.setColor(touchgfx::Color::getColorFromRGB(68, 72, 94));
    swipeContainerTimeCLOCK.add(boxCLOCK);

    imageArrowCL.setXY(11, 178);
    imageArrowCL.setBitmap(touchgfx::Bitmap(BITMAP_DARK_ICONS_BACK_ARROW_32_ID));
    swipeContainerTimeCLOCK.add(imageArrowCL);

    imageArrowCR.setXY(770, 178);
    imageArrowCR.setBitmap(touchgfx::Bitmap(BITMAP_DARK_ICONS_NEXT_ARROW_32_ID));
    swipeContainerTimeCLOCK.add(imageArrowCR);

    labelCLOCK.setXY(15, 16);
    labelCLOCK.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    labelCLOCK.setLinespacing(0);
    labelCLOCK.setTypedText(touchgfx::TypedText(T_SINGLEUSEID5));
    swipeContainerTimeCLOCK.add(labelCLOCK);
    swipeContainerTime.add(swipeContainerTimeCLOCK);

    swipeContainerTimeTISETUP.setWidth(800);
    swipeContainerTimeTISETUP.setHeight(420);

    boxTISETUP.setPosition(0, 0, 800, 420);
    boxTISETUP.setColor(touchgfx::Color::getColorFromRGB(54, 50, 125));
    swipeContainerTimeTISETUP.add(boxTISETUP);

    imageArrowTL.setXY(11, 178);
    imageArrowTL.setBitmap(touchgfx::Bitmap(BITMAP_DARK_ICONS_BACK_ARROW_32_ID));
    swipeContainerTimeTISETUP.add(imageArrowTL);

    imageArrowTR.setXY(770, 178);
    imageArrowTR.setBitmap(touchgfx::Bitmap(BITMAP_DARK_ICONS_NEXT_ARROW_32_ID));
    swipeContainerTimeTISETUP.add(imageArrowTR);

    labelTISETUP.setXY(15, 16);
    labelTISETUP.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    labelTISETUP.setLinespacing(0);
    labelTISETUP.setTypedText(touchgfx::TypedText(T_SINGLEUSEID6));
    swipeContainerTimeTISETUP.add(labelTISETUP);
    swipeContainerTime.add(swipeContainerTimeTISETUP);

    swipeContainerTimeSESSION.setWidth(800);
    swipeContainerTimeSESSION.setHeight(420);

    boxSESSIONSETUP.setPosition(-1, 0, 801, 420);
    boxSESSIONSETUP.setColor(touchgfx::Color::getColorFromRGB(77, 114, 148));
    swipeContainerTimeSESSION.add(boxSESSIONSETUP);

    imageArrowSL.setXY(11, 178);
    imageArrowSL.setBitmap(touchgfx::Bitmap(BITMAP_DARK_ICONS_BACK_ARROW_32_ID));
    swipeContainerTimeSESSION.add(imageArrowSL);

    labelSESSIONSETUP.setXY(15, 16);
    labelSESSIONSETUP.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    labelSESSIONSETUP.setLinespacing(0);
    labelSESSIONSETUP.setTypedText(touchgfx::TypedText(T_SINGLEUSEID7));
    swipeContainerTimeSESSION.add(labelSESSIONSETUP);
    swipeContainerTime.add(swipeContainerTimeSESSION);
    swipeContainerTime.setSelectedPage(0);

    add(__background);
    add(boxLeftBackG);
    add(boxRightBackG);
    add(boxConfigTime);
    add(buttonBackTime);
    add(labelTimeConfig);
    add(boxBacgroundTC);
    add(swipeContainerTime);
}

void TimeModeConfigViewBase::setupScreen()
{

}

void TimeModeConfigViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonBackTime)
    {
        //BackToTimeMode
        //When buttonBackTime clicked change screen to TimeMode
        //Go to TimeMode with screen transition towards West
        application().gotoTimeModeScreenCoverTransitionWest();
    }
}
