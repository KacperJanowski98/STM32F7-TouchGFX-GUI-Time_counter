/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/menu_screen/MenuViewBase.hpp>
#include <touchgfx/Color.hpp>
#include "BitmapDatabase.hpp"
#include <texts/TextKeysAndLanguages.hpp>

MenuViewBase::MenuViewBase() :
    buttonCallback(this, &MenuViewBase::buttonCallbackHandler)
{

    __background.setPosition(0, 0, 800, 480);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));

    boxBackgroundMenu.setPosition(0, 0, 800, 480);
    boxBackgroundMenu.setColor(touchgfx::Color::getColorFromRGB(49, 67, 87));

    boxWithBorderFrame.setPosition(18, 18, 766, 444);
    boxWithBorderFrame.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    boxWithBorderFrame.setBorderColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    boxWithBorderFrame.setBorderSize(5);
    boxWithBorderFrame.setAlpha(10);

    buttonFrequency.setXY(221, 267);
    buttonFrequency.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_LARGE_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_LARGE_PRESSED_ID));
    buttonFrequency.setLabelText(touchgfx::TypedText(T_SINGLEUSEID2));
    buttonFrequency.setLabelColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    buttonFrequency.setLabelColorPressed(touchgfx::Color::getColorFromRGB(182, 223, 240));
    buttonFrequency.setAction(buttonCallback);

    buttonTime.setXY(221, 171);
    buttonTime.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_LARGE_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_LARGE_PRESSED_ID));
    buttonTime.setLabelText(touchgfx::TypedText(T_SINGLEUSEID1));
    buttonTime.setLabelColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    buttonTime.setLabelColorPressed(touchgfx::Color::getColorFromRGB(182, 223, 240));
    buttonTime.setAction(buttonCallback);

    buttonCalibration.setXY(221, 77);
    buttonCalibration.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_LARGE_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_LARGE_PRESSED_ID));
    buttonCalibration.setLabelText(touchgfx::TypedText(T_SINGLEUSEID13));
    buttonCalibration.setLabelColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    buttonCalibration.setLabelColorPressed(touchgfx::Color::getColorFromRGB(182, 223, 240));
    buttonCalibration.setAction(buttonCallback);

    textAreaVersion.setXY(676, 386);
    textAreaVersion.setColor(touchgfx::Color::getColorFromRGB(182, 223, 240));
    textAreaVersion.setLinespacing(0);
    textAreaVersion.setTypedText(touchgfx::TypedText(T_SINGLEUSEID317));

    textAreaVersionNumber.setXY(698, 423);
    textAreaVersionNumber.setColor(touchgfx::Color::getColorFromRGB(126, 224, 159));
    textAreaVersionNumber.setLinespacing(0);
    textAreaVersionNumber.setTypedText(touchgfx::TypedText(T_SINGLEUSEID318));

    imageMenu.setXY(30, 29);
    imageMenu.setBitmap(touchgfx::Bitmap(BITMAP_MY_MENU_ID));

    textAreaMenu.setXY(93, 40);
    textAreaMenu.setColor(touchgfx::Color::getColorFromRGB(182, 223, 240));
    textAreaMenu.setLinespacing(0);
    textAreaMenu.setTypedText(touchgfx::TypedText(T_SINGLEUSEID319));

    buttonAbout.setXY(221, 363);
    buttonAbout.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_LARGE_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_LARGE_PRESSED_ID));
    buttonAbout.setLabelText(touchgfx::TypedText(T_SINGLEUSEID320));
    buttonAbout.setLabelColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    buttonAbout.setLabelColorPressed(touchgfx::Color::getColorFromRGB(182, 223, 240));
    buttonAbout.setAction(buttonCallback);

    add(__background);
    add(boxBackgroundMenu);
    add(boxWithBorderFrame);
    add(buttonFrequency);
    add(buttonTime);
    add(buttonCalibration);
    add(textAreaVersion);
    add(textAreaVersionNumber);
    add(imageMenu);
    add(textAreaMenu);
    add(buttonAbout);
}

void MenuViewBase::setupScreen()
{

}

void MenuViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonFrequency)
    {
        //OpenFreqMode
        //When buttonFrequency clicked change screen to FreqMode
        //Go to FreqMode with screen transition towards East
        application().gotoFreqModeScreenCoverTransitionEast();
    }
    else if (&src == &buttonTime)
    {
        //OpenTimeMode
        //When buttonTime clicked change screen to TimeMode
        //Go to TimeMode with screen transition towards East
        application().gotoTimeModeScreenCoverTransitionEast();
    }
    else if (&src == &buttonCalibration)
    {
        //OpenCalibration
        //When buttonCalibration clicked change screen to CalibrationProgressBar
        //Go to CalibrationProgressBar with screen transition towards East
        application().gotoCalibrationProgressBarScreenCoverTransitionEast();

        //ResetParameters
        //When buttonCalibration clicked call virtual function
        //Call ResetParameters
        ResetParameters();
    }
    else if (&src == &buttonAbout)
    {
        //OpenAbout
        //When buttonAbout clicked change screen to About
        //Go to About with screen transition towards East
        application().gotoAboutScreenCoverTransitionEast();
    }
}
