/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <new>
#include <gui_generated/common/FrontendApplicationBase.hpp>
#include <gui/common/FrontendHeap.hpp>
#include <touchgfx/transitions/NoTransition.hpp>
#include <texts/TextKeysAndLanguages.hpp>
#include <touchgfx/Texts.hpp>
#include <touchgfx/hal/HAL.hpp>
#include <platform/driver/lcd/LCD16bpp.hpp>
#include <gui/calibrationprogressbar_screen/CalibrationProgressBarView.hpp>
#include <gui/calibrationprogressbar_screen/CalibrationProgressBarPresenter.hpp>
#include <gui/menu_screen/MenuView.hpp>
#include <gui/menu_screen/MenuPresenter.hpp>
#include <gui/timemode_screen/TimeModeView.hpp>
#include <gui/timemode_screen/TimeModePresenter.hpp>
#include <gui/timemodeconfig_screen/TimeModeConfigView.hpp>
#include <gui/timemodeconfig_screen/TimeModeConfigPresenter.hpp>
#include <gui/freqmode_screen/FreqModeView.hpp>
#include <gui/freqmode_screen/FreqModePresenter.hpp>
#include <gui/freqmodeconfig_screen/FreqModeConfigView.hpp>
#include <gui/freqmodeconfig_screen/FreqModeConfigPresenter.hpp>
#include <gui/timehistogram_screen/TimeHistogramView.hpp>
#include <gui/timehistogram_screen/TimeHistogramPresenter.hpp>
#include <gui/timegraphti1_screen/TimeGraphTi1View.hpp>
#include <gui/timegraphti1_screen/TimeGraphTi1Presenter.hpp>
#include <gui/freqhistogram_screen/FreqHistogramView.hpp>
#include <gui/freqhistogram_screen/FreqHistogramPresenter.hpp>
#include <gui/freqgraph_screen/FreqGraphView.hpp>
#include <gui/freqgraph_screen/FreqGraphPresenter.hpp>

using namespace touchgfx;

FrontendApplicationBase::FrontendApplicationBase(Model& m, FrontendHeap& heap)
    : touchgfx::MVPApplication(),
      transitionCallback(),
      frontendHeap(heap),
      model(m)
{
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_LANDSCAPE);
    touchgfx::Texts::setLanguage(GB);
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableTextureMapperAll();
}

/*
 * Screen Transition Declarations
 */

// CalibrationProgressBar

void FrontendApplicationBase::gotoCalibrationProgressBarScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplication::gotoCalibrationProgressBarScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoCalibrationProgressBarScreenNoTransitionImpl()
{
    touchgfx::makeTransition<CalibrationProgressBarView, CalibrationProgressBarPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
}

void FrontendApplicationBase::gotoCalibrationProgressBarScreenCoverTransitionEast()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplication::gotoCalibrationProgressBarScreenCoverTransitionEastImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoCalibrationProgressBarScreenCoverTransitionEastImpl()
{
    touchgfx::makeTransition<CalibrationProgressBarView, CalibrationProgressBarPresenter, touchgfx::CoverTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
}

// Menu

void FrontendApplicationBase::gotoMenuScreenSlideTransitionEast()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplication::gotoMenuScreenSlideTransitionEastImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoMenuScreenSlideTransitionEastImpl()
{
    touchgfx::makeTransition<MenuView, MenuPresenter, touchgfx::SlideTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
}

void FrontendApplicationBase::gotoMenuScreenCoverTransitionWest()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplication::gotoMenuScreenCoverTransitionWestImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoMenuScreenCoverTransitionWestImpl()
{
    touchgfx::makeTransition<MenuView, MenuPresenter, touchgfx::CoverTransition<WEST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
}

// TimeMode

void FrontendApplicationBase::gotoTimeModeScreenCoverTransitionEast()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplication::gotoTimeModeScreenCoverTransitionEastImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoTimeModeScreenCoverTransitionEastImpl()
{
    touchgfx::makeTransition<TimeModeView, TimeModePresenter, touchgfx::CoverTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
}

void FrontendApplicationBase::gotoTimeModeScreenWipeTransitionEast()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplication::gotoTimeModeScreenWipeTransitionEastImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoTimeModeScreenWipeTransitionEastImpl()
{
    touchgfx::makeTransition<TimeModeView, TimeModePresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
}

// TimeModeConfig

void FrontendApplicationBase::gotoTimeModeConfigScreenWipeTransitionWest()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplication::gotoTimeModeConfigScreenWipeTransitionWestImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoTimeModeConfigScreenWipeTransitionWestImpl()
{
    touchgfx::makeTransition<TimeModeConfigView, TimeModeConfigPresenter, touchgfx::WipeTransition<WEST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
}

// FreqMode

void FrontendApplicationBase::gotoFreqModeScreenCoverTransitionEast()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplication::gotoFreqModeScreenCoverTransitionEastImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoFreqModeScreenCoverTransitionEastImpl()
{
    touchgfx::makeTransition<FreqModeView, FreqModePresenter, touchgfx::CoverTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
}

void FrontendApplicationBase::gotoFreqModeScreenWipeTransitionEast()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplication::gotoFreqModeScreenWipeTransitionEastImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoFreqModeScreenWipeTransitionEastImpl()
{
    touchgfx::makeTransition<FreqModeView, FreqModePresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
}

// FreqModeConfig

void FrontendApplicationBase::gotoFreqModeConfigScreenWipeTransitionWest()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplication::gotoFreqModeConfigScreenWipeTransitionWestImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoFreqModeConfigScreenWipeTransitionWestImpl()
{
    touchgfx::makeTransition<FreqModeConfigView, FreqModeConfigPresenter, touchgfx::WipeTransition<WEST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
}

// TimeHistogram

void FrontendApplicationBase::gotoTimeHistogramScreenWipeTransitionWest()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplication::gotoTimeHistogramScreenWipeTransitionWestImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoTimeHistogramScreenWipeTransitionWestImpl()
{
    touchgfx::makeTransition<TimeHistogramView, TimeHistogramPresenter, touchgfx::WipeTransition<WEST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
}

void FrontendApplicationBase::gotoTimeHistogramScreenWipeTransitionEast()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplication::gotoTimeHistogramScreenWipeTransitionEastImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoTimeHistogramScreenWipeTransitionEastImpl()
{
    touchgfx::makeTransition<TimeHistogramView, TimeHistogramPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
}

// TimeGraphTi1

void FrontendApplicationBase::gotoTimeGraphTi1ScreenWipeTransitionWest()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplication::gotoTimeGraphTi1ScreenWipeTransitionWestImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoTimeGraphTi1ScreenWipeTransitionWestImpl()
{
    touchgfx::makeTransition<TimeGraphTi1View, TimeGraphTi1Presenter, touchgfx::WipeTransition<WEST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
}

// FreqHistogram

void FrontendApplicationBase::gotoFreqHistogramScreenWipeTransitionWest()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplication::gotoFreqHistogramScreenWipeTransitionWestImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoFreqHistogramScreenWipeTransitionWestImpl()
{
    touchgfx::makeTransition<FreqHistogramView, FreqHistogramPresenter, touchgfx::WipeTransition<WEST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
}

void FrontendApplicationBase::gotoFreqHistogramScreenWipeTransitionEast()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplication::gotoFreqHistogramScreenWipeTransitionEastImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoFreqHistogramScreenWipeTransitionEastImpl()
{
    touchgfx::makeTransition<FreqHistogramView, FreqHistogramPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
}

// FreqGraph

void FrontendApplicationBase::gotoFreqGraphScreenWipeTransitionWest()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplication::gotoFreqGraphScreenWipeTransitionWestImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoFreqGraphScreenWipeTransitionWestImpl()
{
    touchgfx::makeTransition<FreqGraphView, FreqGraphPresenter, touchgfx::WipeTransition<WEST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
}
